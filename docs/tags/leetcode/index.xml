<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Leetcode on Oyyko</title>
    <link>https://oyyko.com/tags/leetcode/</link>
    <description>Recent content in Leetcode on Oyyko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Tue, 30 Nov 2021 15:20:51 +0800</lastBuildDate>
    <atom:link href="https://oyyko.com/tags/leetcode/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>二分总结</title>
      <link>https://oyyko.com/posts/bisection/</link>
      <pubDate>Tue, 30 Nov 2021 15:20:51 +0800</pubDate>
      <guid>https://oyyko.com/posts/bisection/</guid>
      <description>##　Leetcode 704 二分查找target&#xA;这种是在一个元素各不相同的有序数组里面找一个等于target的数 解法：&#xA;1class Solution 2{ 3public: 4 int search(vector&amp;lt;int&amp;gt; &amp;amp;nums, int target) 5 { 6 int l{0}; 7 int r = nums.size() - 1; 8 int mid; 9 while (l &amp;lt;= r) 10 { 11 mid = (l + (r - l) / 2); 12 if (nums[mid] == target) 13 { 14 return mid; 15 } 16 if (target &amp;lt; nums[mid]) 17 { 18 r = mid - 1; 19 } 20 else 21 { 22 l = mid + 1; 23 } 24 } 25 return -1; 26 } 27}; 此时，分三种情况。注意到，在不等于的时候，r和l都对mid有排斥</description>
    </item>
  </channel>
</rss>
