<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>haskell on Oyyko</title>
    <link>https://oyyko.com/tags/haskell/</link>
    <description>Recent content in haskell on Oyyko</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 01 Nov 2023 14:56:15 -0700</lastBuildDate>
    <atom:link href="https://oyyko.com/tags/haskell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UCSD CSE 230 Midterm Review Note</title>
      <link>https://oyyko.com/posts/haskell1/</link>
      <pubDate>Wed, 01 Nov 2023 14:56:15 -0700</pubDate>
      <guid>https://oyyko.com/posts/haskell1/</guid>
      <description>01-lambda Link to heading Programs are expressions e (also called λ-terms) of one of three kinds:&#xA;Variable x, y, z Abstraction (aka nameless function definition) (\x -&amp;gt; e) x is the formal parameter, e is the body “for any x compute e” Application (aka function call) (e1 e2) e1 is the function, e2 is the argument in your favorite language: e1(e2) Execute = rewrite step-by-step&#xA;Following simple rules until no more rules apply An variable x is free in e if there exists a free occurrence of x in e.</description>
    </item>
  </channel>
</rss>
